# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  (1..5).each do |i|
    config.vm.define "client-#{i}" do |node|
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
      node.vm.box = "almalinux/8"
  
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
      node.vm.network "private_network", ip: "192.168.56.1#{i}"
  
    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
      node.vm.provider "libvirt" do |vb|
    #   # Customize the amount of memory on the VM:
       vb.memory = "1536"
       vb.cpus = "1"
      end
  
      node.vm.post_up_message = "do 'sudo snap install dnslookup' to install the dns client."

      node.vm.hostname = "client-#{i}"
      node.vm.provision "file", source: "../../shared_files/list_of_dns_entry.csv", destination: "list_of_dns_entry.csv"
      node.vm.provision "file", source: "../../scripts/request_client_dns.py", destination: "request_client_dns.py"
      node.vm.provision "file", source: "../../scripts/go_client.go", destination: "go_client.go"
      node.vm.provision "file", source: "../../scripts/c_client", destination: "c_client"
      node.vm.provision "file", source: "../../shared_files/node_exporter.service", destination: "node_exporter.service"
      node.vm.provision "file", source: "../../shared_files/node_exporter-1.5.0.linux-amd64.tar.gz", destination: "node_exporter-1.5.0.linux-amd64.tar.gz"
          # Enable provisioning with a shell script. Additional provisioners such as
    # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
    # documentation for more information about their specific syntax and use.
      node.vm.provision "shell", inline: <<-SHELL
        dnf install epel-release -y
        yum config-manager --set-enabled powertools
        useradd -rs /bin/false node_exporter
        dnf install snapd python3 python3-pandas golang -y
        systemctl enable --now snapd.socket
        ln -s /var/lib/snapd/snap /snap
        tar xvzf node_exporter*.tar.gz 
        cp /home/vagrant/node_exporter*/node_exporter /usr/local/bin
        cp /home/vagrant/*_exporter.service /lib/systemd/system
        restorecon -Rv /usr/local/bin
        systemctl daemon-reload
        systemctl enable node_exporter
        systemctl start node_exporter.service 
            # snap install dnslookup need to be run manualy
      SHELL
    end
  end
end